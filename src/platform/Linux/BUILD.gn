# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")

import("${build_root}/config/linux/pkg_config.gni")

import("${chip_root}/src/lib/core/core.gni")
import("${chip_root}/src/platform/device.gni")

import("${chip_root}/src/crypto/crypto.gni")

assert(chip_device_platform == "linux")

if (chip_enable_openthread) {
  import("//build_overrides/openthread.gni")
  import("//build_overrides/ot_br_posix.gni")
}

static_library("Linux") {
  sources = [
    "../DeviceSafeQueue.cpp",
    "../DeviceSafeQueue.h",
    "../GLibTypeDeleter.h",
    "../SingletonConfigurationManager.cpp",
    "CHIPDevicePlatformConfig.h",
    "CHIPDevicePlatformEvent.h",
    "CHIPLinuxStorage.cpp",
    "CHIPLinuxStorage.h",
    "CHIPLinuxStorageIni.cpp",
    "CHIPLinuxStorageIni.h",
    "CHIPPlatformConfig.h",
    "ConfigurationManagerImpl.cpp",
    "ConfigurationManagerImpl.h",
    "ConnectivityManagerImpl.cpp",
    "ConnectivityManagerImpl.h",
    "ConnectivityUtils.cpp",
    "ConnectivityUtils.h",
    "DeviceInstanceInfoProviderImpl.cpp",
    "DeviceInstanceInfoProviderImpl.h",
    "DiagnosticDataProviderImpl.cpp",
    "DiagnosticDataProviderImpl.h",
    "InetPlatformConfig.h",
    "KeyValueStoreManagerImpl.cpp",
    "KeyValueStoreManagerImpl.h",
    "NetworkCommissioningDriver.h",
    "NetworkCommissioningEthernetDriver.cpp",
    "PlatformManagerImpl.cpp",
    "PlatformManagerImpl.h",
    "PosixConfig.cpp",
    "PosixConfig.h",
    "SystemPlatformConfig.h",
    "SystemTimeSupport.cpp",
  ]

  deps = [
    "${chip_root}/src/app:app_config",
    "${chip_root}/src/app/common:ids",
    "${chip_root}/src/app/icd/server:icd-server-config",
    "${chip_root}/src/credentials:credentials_header",
    "${chip_root}/src/setup_payload",
  ]


  if (chip_with_trusty_os) {
    sources += [
      "DeviceAttestationCredsTrusty.cpp",
      "DeviceAttestationCredsTrusty.h",
    ]
  }

  public_deps = [
    "${chip_root}/src/app/common:cluster-objects",
    "${chip_root}/src/platform:platform_base",
    "${chip_root}/third_party/inipp",
  ]

  public_configs = []


  if (chip_with_trusty_os) {
    public_deps += [ "${chip_root}/third_party/libtrustymatter" ]
  }

  if (chip_device_config_enable_wifipaf) {
    public_deps += [ "${chip_root}/src/wifipaf" ]
  }
}
